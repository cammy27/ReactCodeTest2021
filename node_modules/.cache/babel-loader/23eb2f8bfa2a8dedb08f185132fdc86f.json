{"ast":null,"code":"var _jsxFileName = \"/Users/flycatchinfotech/Documents/whiteRabbit/react-redux/ReactCodeTest2021/src/_components/privateRoute/index.js\";\n\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isAuthenticated } from \"../../services/authenticationService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PrivateRoute = _ref => {\n  let {\n    component,\n    ...rest\n  } = _ref;\n\n  const routeComponent = props => isAuthenticated() ? /*#__PURE__*/React.createElement(component, props) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: {\n      pathname: \"/\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: routeComponent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n};\n_c = PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/flycatchinfotech/Documents/whiteRabbit/react-redux/ReactCodeTest2021/src/_components/privateRoute/index.js"],"names":["React","Route","Redirect","isAuthenticated","PrivateRoute","component","rest","routeComponent","props","createElement","pathname"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,eAAT,QAAgC,sCAAhC;;AAEA,OAAO,MAAMC,YAAY,GAAG,QAA4B;AAAA,MAA3B;AAAEC,IAAAA,SAAF;AAAa,OAAGC;AAAhB,GAA2B;;AACtD,QAAMC,cAAc,GAAIC,KAAD,IACrBL,eAAe,kBACbH,KAAK,CAACS,aAAN,CAAoBJ,SAApB,EAA+BG,KAA/B,CADa,gBAGb,QAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAAEE,MAAAA,QAAQ,EAAE;AAAZ;AAAd;AAAA;AAAA;AAAA;AAAA,UAJJ;;AAMA,sBAAO,QAAC,KAAD,OAAWJ,IAAX;AAAiB,IAAA,MAAM,EAAEC;AAAzB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CARM;KAAMH,Y","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isAuthenticated } from \"../../services/authenticationService\";\n\nexport const PrivateRoute = ({ component, ...rest }) => {\n  const routeComponent = (props) =>\n    isAuthenticated() ? (\n      React.createElement(component, props)\n    ) : (\n      <Redirect to={{ pathname: \"/\" }} />\n    );\n  return <Route {...rest} render={routeComponent} />;\n};\n"]},"metadata":{},"sourceType":"module"}