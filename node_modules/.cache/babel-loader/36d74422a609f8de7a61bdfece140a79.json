{"ast":null,"code":"import { userConstants } from '../_constants/userContants';\nimport userService from '../_services/userServices';\nimport { history } from '../_helpers/history';\nimport locale from 'antd/lib/date-picker/locale/en_US';\n\nconst authenticate = values => {\n  return dispatch => {\n    dispatch(request(values.username));\n    userService.authenticate(values).then(res => {\n      if (res) {\n        dispatch(success(values));\n        locale;\n        history.push('/home-page');\n      } else {\n        dispatch(failure());\n        alert(\"WRONG CREDENTIALS\");\n      }\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.AUTHENTICATE_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.AUTHENTICATE_SUCCESS,\n      user\n    };\n  }\n\n  function failure() {\n    return {\n      type: userConstants.AUTHENTICATE_FAILURE\n    };\n  }\n};\n\nconst userActions = {\n  authenticate\n};\nexport default userActions;","map":{"version":3,"sources":["/Users/flycatchinfotech/Documents/whiteRabbit/react-redux/ReactCodeTest2021/src/_actions/user.actions.js"],"names":["userConstants","userService","history","locale","authenticate","values","dispatch","request","username","then","res","success","push","failure","alert","user","type","AUTHENTICATE_REQUEST","AUTHENTICATE_SUCCESS","AUTHENTICATE_FAILURE","userActions"],"mappings":"AAAA,SAASA,aAAT,QAA8B,4BAA9B;AACA,OAAOC,WAAP,MAAyB,2BAAzB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;;AAEA,MAAMC,YAAY,GAAIC,MAAD,IAAY;AAC7B,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACC,OAAO,CAACF,MAAM,CAACG,QAAR,CAAR,CAAR;AACAP,IAAAA,WAAW,CAACG,YAAZ,CAAyBC,MAAzB,EAAiCI,IAAjC,CAAuCC,GAAD,IAAS;AAC3C,UAAGA,GAAH,EAAO;AACHJ,QAAAA,QAAQ,CAACK,OAAO,CAACN,MAAD,CAAR,CAAR;AACAF,QAAAA,MAAM;AACND,QAAAA,OAAO,CAACU,IAAR,CAAa,YAAb;AACH,OAJD,MAKI;AACAN,QAAAA,QAAQ,CAACO,OAAO,EAAR,CAAR;AACAC,QAAAA,KAAK,CAAC,mBAAD,CAAL;AACH;AACJ,KAVD;AAWH,GAbD;;AAeA,WAASP,OAAT,CAAiBQ,IAAjB,EAAuB;AAAE,WAAO;AAAEC,MAAAA,IAAI,EAAEhB,aAAa,CAACiB,oBAAtB;AAA4CF,MAAAA;AAA5C,KAAP;AAA2D;;AACpF,WAASJ,OAAT,CAAiBI,IAAjB,EAAuB;AAAE,WAAO;AAAEC,MAAAA,IAAI,EAAEhB,aAAa,CAACkB,oBAAtB;AAA4CH,MAAAA;AAA5C,KAAP;AAA2D;;AACpF,WAASF,OAAT,GAAmB;AAAE,WAAO;AAAEG,MAAAA,IAAI,EAAEhB,aAAa,CAACmB;AAAtB,KAAP;AAAqD;AAC7E,CAnBD;;AAoBC,MAAMC,WAAW,GAAG;AACjBhB,EAAAA;AADiB,CAApB;AAID,eAAegB,WAAf","sourcesContent":["import { userConstants } from '../_constants/userContants';\nimport userService  from '../_services/userServices';\nimport { history } from '../_helpers/history';\nimport locale from 'antd/lib/date-picker/locale/en_US';\n\nconst authenticate = (values) => {\n    return dispatch => {\n        dispatch(request(values.username ));\n        userService.authenticate(values).then((res) => {\n            if(res){\n                dispatch(success(values));\n                locale\n                history.push('/home-page');   \n            }\n            else{\n                dispatch(failure());\n                alert(\"WRONG CREDENTIALS\")\n            }\n        })\n    };\n\n    function request(user) { return { type: userConstants.AUTHENTICATE_REQUEST, user } }\n    function success(user) { return { type: userConstants.AUTHENTICATE_SUCCESS, user } }\n    function failure() { return { type: userConstants.AUTHENTICATE_FAILURE } }\n}\n const userActions = {\n    authenticate\n}\n\nexport default userActions;"]},"metadata":{},"sourceType":"module"}